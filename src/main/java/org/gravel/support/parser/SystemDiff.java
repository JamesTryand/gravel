package org.gravel.support.parser;

/*
	This file is automatically generated. See FX.TService.TService class>>generateWorkspaces
	(C) CosmoCows B.V.
*/

import java.math.BigDecimal;
import java.math.BigInteger;
import org.gravel.support.jvm.NonLocalReturn;
import org.gravel.support.parser.Diff;
import java.util.Map;
import org.gravel.support.parser.Reference;
import org.gravel.support.parser.NamespaceNode;

public class SystemDiff extends Object implements Cloneable {

	public static SystemDiff_Factory factory = new SystemDiff_Factory();

	Diff _diff;

	Map<Reference, NamespaceNode> _namespaces;

	public static class SystemDiff_Factory extends org.gravel.support.jvm.SmalltalkFactory {

		public SystemDiff basicNew() {
			SystemDiff newInstance = new SystemDiff();
			newInstance.initialize();
			return newInstance;
		}

		public SystemDiff diff_namespaces_(final Diff _aClassDiffs, final Map<Reference, NamespaceNode> _namespaces) {
			return this.basicNew().initializeDiff_namespaces_(_aClassDiffs, _namespaces);
		}
	}

	static public SystemDiff _diff_namespaces_(Object receiver, final Diff _aClassDiffs, final Map<Reference, NamespaceNode> _namespaces) {
		return factory.diff_namespaces_(_aClassDiffs, _namespaces);
	}

	public SystemDiff copy() {
		try {
			SystemDiff _temp1 = (SystemDiff) this.clone();
			_temp1.postCopy();
			return _temp1;
		} catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

	public Diff diff() {
		return _diff;
	}

	public SystemDiff_Factory factory() {
		return factory;
	}

	public SystemDiff initialize() {
		return this;
	}

	public SystemDiff initializeDiff_namespaces_(final Diff _aClassDiffs, final Map<Reference, NamespaceNode> _aDictionary) {
		_diff = _aClassDiffs;
		_namespaces = _aDictionary;
		this.initialize();
		return this;
	}

	public Map<Reference, NamespaceNode> namespaces() {
		return _namespaces;
	}

	public SystemDiff postCopy() {
		return this;
	}
}
