package org.gravel.support.parser;

/*
	This file is automatically generated. See FX.TService.TService class>>generateWorkspaces
	(C) CosmoCows B.V.
*/

import java.math.BigDecimal;
import java.math.BigInteger;
import org.gravel.support.jvm.NonLocalReturn;
import org.gravel.support.parser.LiteralNode;
import org.gravel.support.parser.LiteralNode.LiteralNode_Factory;
import org.gravel.support.parser.NodeVisitor;
import org.gravel.support.parser.Node;
import org.gravel.support.parser.SourcePosition;

public class CharacterLiteralNode extends LiteralNode implements Cloneable {

	public static CharacterLiteralNode_Factory factory = new CharacterLiteralNode_Factory();

	char _value;

	public static class CharacterLiteralNode_Factory extends LiteralNode_Factory {

		public CharacterLiteralNode basicNew() {
			CharacterLiteralNode newInstance = new CharacterLiteralNode();
			newInstance.initialize();
			return newInstance;
		}

		public CharacterLiteralNode value_(final char _aCharacter) {
			return ((CharacterLiteralNode) this.basicNew().initializeValue_(_aCharacter));
		}
	}

	static public CharacterLiteralNode _value_(Object receiver, final char _aCharacter) {
		return factory.value_(_aCharacter);
	}

	@Override
	public <X> X accept_(final NodeVisitor<X> _visitor) {
		return _visitor.visitCharacterLiteralNode_(this);
	}

	@Override
	public CharacterLiteralNode allNodesDo_(final org.gravel.support.jvm.Block1<Object, Node> _aBlock) {
		this.nodesDo_(new org.gravel.support.jvm.Block1<Object, Node>() {

			@Override
			public Object value_(final Node _each) {
				return _each.withAllNodesDo_(_aBlock);
			}
		});
		return this;
	}

	@Override
	public CharacterLiteralNode allNodesDo_pruneWhere_(final org.gravel.support.jvm.Block1<Object, Node> _aBlock, final org.gravel.support.jvm.Block1<Boolean, Node> _pruneBlock) {
		this.nodesDo_(new org.gravel.support.jvm.Block1<Object, Node>() {

			@Override
			public Object value_(final Node _each) {
				if (!_pruneBlock.value_(_each)) {
					return _each.withAllNodesDo_pruneWhere_(_aBlock, _pruneBlock);
				}
				return CharacterLiteralNode.this;
			}
		});
		return this;
	}

	public CharacterLiteralNode copy() {
		try {
			CharacterLiteralNode _temp1 = (CharacterLiteralNode) this.clone();
			_temp1.postCopy();
			return _temp1;
		} catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

	@Override
	public boolean equals(final Object _anObject) {
		if (!super.equals(_anObject)) {
			return false;
		}
		if (!org.gravel.support.jvm.CharacterExtensions.equals_(this._value, ((CharacterLiteralNode) _anObject)._value)) {
			return false;
		}
		return true;
	}

	public CharacterLiteralNode_Factory factory() {
		return factory;
	}

	@Override
	public int hashCode() {
		return (super.hashCode() ^ _value);
	}

	public CharacterLiteralNode initializeValue_(final char _aCharacter) {
		_value = _aCharacter;
		this.initialize();
		return this;
	}

	@Override
	public CharacterLiteralNode innerSourceOn_(final StringBuilder _aStream) {
		_aStream.append('$');
		_aStream.append(_value);
		return this;
	}

	@Override
	public boolean isCharacterLiteralNode() {
		return true;
	}

	@Override
	public CharacterLiteralNode localVarNamesDo_(final org.gravel.support.jvm.Block1<Object, String> _aBlock) {
		return this;
	}

	@Override
	public CharacterLiteralNode prettySourceOn_(final StringBuilder _aStream) {
		SourcePrinter.factory.on_(_aStream).visit_(this);
		return this;
	}

	@Override
	public CharacterLiteralNode printOn_(final StringBuilder _aStream) {
		final String _title;
		_title = this.factory().toString();
		_aStream.append(org.gravel.support.jvm.CharacterExtensions.isVowel(_title.charAt(0)) ? "an " : "a ");
		_aStream.append(_title);
		_aStream.append('[');
		this.sourceOn_(_aStream);
		_aStream.append(']');
		return this;
	}

	@Override
	public CharacterLiteralNode pvtSetSourcePosition_(final SourcePosition _aSourcePosition) {
		_sourcePosition = _aSourcePosition;
		return this;
	}

	@Override
	public CharacterLiteralNode sourceOn_(final StringBuilder _aStream) {
		if (!this.needsBrackets()) {
			return CharacterLiteralNode.this.innerSourceOn_(_aStream);
		}
		_aStream.append('(');
		this.innerSourceOn_(_aStream);
		_aStream.append(')');
		return this;
	}

	@Override
	public Character value() {
		return _value;
	}

	@Override
	public CharacterLiteralNode withAllNodesDo_(final org.gravel.support.jvm.Block1<Object, Node> _aBlock) {
		_aBlock.value_(this);
		this.allNodesDo_(_aBlock);
		return this;
	}

	@Override
	public CharacterLiteralNode withAllNodesDo_pruneWhere_(final org.gravel.support.jvm.Block1<Object, Node> _aBlock, final org.gravel.support.jvm.Block1<Boolean, Node> _pruneBlock) {
		_aBlock.value_(this);
		this.allNodesDo_pruneWhere_(_aBlock, _pruneBlock);
		return this;
	}

	@Override
	public CharacterLiteralNode withSourcePosition_(final SourcePosition _aSourcePosition) {
		if (_sourcePosition == _aSourcePosition) {
			return CharacterLiteralNode.this;
		}
		return this.copy().pvtSetSourcePosition_(_aSourcePosition);
	}
}
