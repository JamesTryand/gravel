package org.gravel.support.parser;

/*
	This file is automatically generated. See FX.TService.TService class>>generateWorkspaces
	(C) CosmoCows B.V.
*/

import java.math.BigDecimal;
import java.math.BigInteger;
import org.gravel.support.jvm.NonLocalReturn;
import org.gravel.support.parser.MethodDiff;
import org.gravel.support.parser.MethodDiff.MethodDiff_Factory;
import org.gravel.support.parser.Reference;
import org.gravel.support.parser.MethodNode;
import org.gravel.support.parser.DiffVisitor;
import org.gravel.support.parser.SystemNode;
import org.gravel.support.parser.UpdateClassDiff;
import org.gravel.support.parser.Diff;

public class UpdateMethodDiff extends MethodDiff implements Cloneable {

	public static UpdateMethodDiff_Factory factory = new UpdateMethodDiff_Factory();

	public static class UpdateMethodDiff_Factory extends MethodDiff_Factory {

		public UpdateMethodDiff basicNew() {
			UpdateMethodDiff newInstance = new UpdateMethodDiff();
			newInstance.initialize();
			return newInstance;
		}

		@Override
		public UpdateMethodDiff reference_methodNode_(final Reference _anAbsoluteReference, final MethodNode _anUnaryMethodNode) {
			return ((UpdateMethodDiff) this.basicNew().initializeReference_methodNode_(_anAbsoluteReference, _anUnaryMethodNode));
		}
	}

	static public UpdateMethodDiff _reference_methodNode_(Object receiver, final Reference _anAbsoluteReference, final MethodNode _anUnaryMethodNode) {
		return factory.reference_methodNode_(_anAbsoluteReference, _anUnaryMethodNode);
	}

	@Override
	public DiffVisitor accept_(final DiffVisitor _visitor) {
		return _visitor.visitUpdateMethodDiff_(this);
	}

	@Override
	public SystemNode applyOnSystemNode_(final SystemNode _aSystemNode) {
		return _aSystemNode.withClassDescriptionNode_(_aSystemNode.classNodeAt_(_reference).copyReplaceMethodNode_(_methodNode));
	}

	@Override
	public UpdateClassDiff asClassDiff() {
		return UpdateClassDiff.factory.reference_methodNodes_updatedMethodNodes_deletedSelectors_(_reference, new MethodNode[] {}, org.gravel.support.jvm.ArrayFactory.with_(_methodNode), new String[] {});
	}

	public UpdateMethodDiff copy() {
		try {
			UpdateMethodDiff _temp1 = (UpdateMethodDiff) this.clone();
			_temp1.postCopy();
			return _temp1;
		} catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

	public UpdateMethodDiff_Factory factory() {
		return factory;
	}

	@Override
	public UpdateMethodDiff initializeReference_methodNode_(final Reference _anAbsoluteReference, final MethodNode _anUnaryMethodNode) {
		_reference = _anAbsoluteReference;
		_methodNode = _anUnaryMethodNode;
		this.initialize();
		return this;
	}

	@Override
	public UpdateMethodDiff printDescriptionOn_(final StringBuilder _aStream) {
		_aStream.append(_reference.toString());
		return this;
	}

	@Override
	public Diff withDiff_(final Diff _aDiff) {
		return _aDiff.withUpdateMethodDiff_(this);
	}
}
