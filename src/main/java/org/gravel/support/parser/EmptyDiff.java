package org.gravel.support.parser;

/*
	This file is automatically generated. See FX.TService.TService class>>generateWorkspaces
	(C) CosmoCows B.V.
*/

import java.math.BigDecimal;
import java.math.BigInteger;
import org.gravel.support.jvm.NonLocalReturn;
import org.gravel.support.parser.Diff;
import org.gravel.support.parser.Diff.Diff_Factory;
import org.gravel.support.parser.DiffVisitor;
import org.gravel.support.parser.SystemNode;
import org.gravel.support.parser.AddMethodDiff;
import org.gravel.support.parser.UpdateMethodDiff;

public class EmptyDiff extends Diff implements Cloneable {

	public static EmptyDiff_Factory factory = new EmptyDiff_Factory();

	public static class EmptyDiff_Factory extends Diff_Factory {

		public EmptyDiff basicNew() {
			EmptyDiff newInstance = new EmptyDiff();
			newInstance.initialize();
			return newInstance;
		}
	}

	@Override
	public DiffVisitor accept_(final DiffVisitor _visitor) {
		return _visitor.visitEmptyDiff_(this);
	}

	@Override
	public SystemNode applyOnSystemNode_(final SystemNode _aSystemNode) {
		return _aSystemNode;
	}

	public EmptyDiff copy() {
		try {
			EmptyDiff _temp1 = (EmptyDiff) this.clone();
			_temp1.postCopy();
			return _temp1;
		} catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

	public EmptyDiff_Factory factory() {
		return factory;
	}

	@Override
	public EmptyDiff printDescriptionOn_(final StringBuilder _aStream) {
		return this;
	}

	@Override
	public AddMethodDiff withAddMethodDiff_(final AddMethodDiff _anAddMethodDiff) {
		return _anAddMethodDiff;
	}

	@Override
	public Diff withDiff_(final Diff _aDiff) {
		return _aDiff;
	}

	@Override
	public UpdateMethodDiff withUpdateMethodDiff_(final UpdateMethodDiff _anUpdateMethodDiff) {
		return _anUpdateMethodDiff;
	}
}
