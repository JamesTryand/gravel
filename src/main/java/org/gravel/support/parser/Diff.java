package org.gravel.support.parser;

/*
	This file is automatically generated. See FX.TService.TService class>>generateWorkspaces
	(C) CosmoCows B.V.
*/

import java.math.BigDecimal;
import java.math.BigInteger;
import org.gravel.support.jvm.NonLocalReturn;
import org.gravel.support.parser.DiffVisitor;
import org.gravel.support.parser.SystemNode;
import org.gravel.support.parser.AbstractClassDiff;
import org.gravel.support.parser.AddClassDiff;
import org.gravel.support.parser.ClassNode;
import org.gravel.support.parser.AddInstVarDiff;
import org.gravel.support.parser.AddMethodDiff;
import org.gravel.support.parser.BranchDiff;
import org.gravel.support.parser.ClassDiffs;
import org.gravel.support.parser.EmptyDiff;
import org.gravel.support.parser.MethodDiff;
import org.gravel.support.parser.NewClassDiff;
import org.gravel.support.parser.RemoveInstVarDiff;
import org.gravel.support.parser.RemoveMethodDiff;
import org.gravel.support.parser.UpdateClassDiff;
import org.gravel.support.parser.UpdateMethodDiff;
import org.gravel.support.parser.WrapJavaclassDiff;

abstract public class Diff extends Object implements Cloneable {

	public static Diff_Factory factory = new Diff_Factory();

	public static class Diff_Factory extends org.gravel.support.jvm.SmalltalkFactory {

		public Diff basicNew() {
			throw new RuntimeException("Diff is an abstract class");
		}
	}

	public DiffVisitor accept_(final DiffVisitor _visitor) {
		return _visitor.visitDiff_(this);
	}

	public abstract SystemNode applyOnSystemNode_(final SystemNode _aSystemNode);

	public Integer classDiffsSize() {
		return 0;
	}

	public Diff copy() {
		try {
			Diff _temp1 = (Diff) this.clone();
			_temp1.postCopy();
			return _temp1;
		} catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

	public Diff_Factory factory() {
		return factory;
	}

	public Diff initialize() {
		return this;
	}

	public Diff postCopy() {
		return this;
	}

	public abstract Diff printDescriptionOn_(final StringBuilder _aStream);

	public String toString() {
		final StringBuilder _aStream;
		_aStream = org.gravel.support.jvm.WriteStreamFactory.on_(new String());
		_aStream.append(org.gravel.core.Symbol.value(this.getClass().getSimpleName()).asString());
		_aStream.append('[');
		this.printDescriptionOn_(_aStream);
		_aStream.append(']');
		return _aStream.toString();
	}

	public Diff withAbstractClassDiff_(final AbstractClassDiff _aAbstractClassDiff) {
		return this.withDiff_(_aAbstractClassDiff);
	}

	public Diff withAddClassDiffForClassNode_(final ClassNode _aClassNode) {
		if (_aClassNode.javaClassPath() != null) {
			return Diff.this.withDiff_(WrapJavaclassDiff.factory.classNode_(_aClassNode));
		}
		return this.withDiff_(AddClassDiff.factory.classNode_(_aClassNode));
	}

	public Diff withAddClassDiff_(final AddClassDiff _anAddClassDiff) {
		return this.withNewClassDiff_(_anAddClassDiff);
	}

	public Diff withAddInstVarDiff_(final AddInstVarDiff _aAddInstVarDiff) {
		return this.withDiff_(_aAddInstVarDiff);
	}

	public Diff withAddMethodDiff_(final AddMethodDiff _aAddMethodDiff) {
		return this.withMethodDiff_(_aAddMethodDiff);
	}

	public Diff withBranchDiff_(final BranchDiff _aBranchDiff) {
		return this.withAbstractClassDiff_(_aBranchDiff);
	}

	public Diff withClassDiffs_(final ClassDiffs _aClassDiffs) {
		return this.withAbstractClassDiff_(_aClassDiffs);
	}

	public abstract Diff withDiff_(final Diff _aDiff);

	public Diff withEmptyDiff_(final EmptyDiff _aEmptyDiff) {
		return this.withDiff_(_aEmptyDiff);
	}

	public Diff withMethodDiff_(final MethodDiff _aMethodDiff) {
		return this.withDiff_(_aMethodDiff);
	}

	public Diff withNewClassDiff_(final NewClassDiff _aNewClassDiff) {
		return this.withAbstractClassDiff_(_aNewClassDiff);
	}

	public Diff withRemoveClassDiffForClassNode_(final ClassNode _aClassNode) {
		return this.withDiff_(RemoveClassDiff.factory.classNode_(_aClassNode));
	}

	public Diff withRemoveInstVarDiff_(final RemoveInstVarDiff _aRemoveInstVarDiff) {
		return this.withDiff_(_aRemoveInstVarDiff);
	}

	public Diff withRemoveMethodDiff_(final RemoveMethodDiff _aRemoveMethodDiff) {
		return this.withDiff_(_aRemoveMethodDiff);
	}

	public Diff withUpdateClassDiff_(final UpdateClassDiff _anUpdateClassDiff) {
		return this.withAbstractClassDiff_(_anUpdateClassDiff);
	}

	public Diff withUpdateMethodDiff_(final UpdateMethodDiff _aUpdateMethodDiff) {
		return this.withMethodDiff_(_aUpdateMethodDiff);
	}

	public Diff withWrapJavaclassDiff_(final WrapJavaclassDiff _aWrapJavaclassDiff) {
		return this.withNewClassDiff_(_aWrapJavaclassDiff);
	}
}
