package org.gravel.support.parser;

/*
	This file is automatically generated. See FX.TService.TService class>>generateWorkspaces
	(C) CosmoCows B.V.
*/

import java.math.BigDecimal;
import java.math.BigInteger;
import org.gravel.support.jvm.NonLocalReturn;
import org.gravel.support.parser.NodeVisitor;
import org.gravel.support.parser.Node;
import org.gravel.support.parser.NodeVisitor.NodeVisitor_Factory;
import org.gravel.support.parser.MethodNode;
import org.gravel.support.parser.ArrayAccessNode;
import org.gravel.support.parser.Expression;
import org.gravel.support.parser.ArrayAtNode;
import org.gravel.support.parser.ArrayAtPutNode;
import org.gravel.support.parser.ArrayLiteralNode;
import org.gravel.support.parser.LiteralNode;
import org.gravel.support.parser.ArraySizeNode;
import org.gravel.support.parser.AssignmentNode;
import org.gravel.support.parser.VariableNode;
import org.gravel.support.parser.BinaryMessageNode;
import org.gravel.support.parser.Statement;
import org.gravel.support.parser.BinaryMethodNode;
import org.gravel.support.parser.VariableDeclarationNode;
import org.gravel.support.parser.SequenceNode;
import org.gravel.support.parser.TypeNode;
import org.gravel.support.parser.PragmaNode;
import org.gravel.support.parser.BlockNode;
import org.gravel.support.parser.BlockTypeNode;
import org.gravel.support.parser.BooleanAndNode;
import org.gravel.support.parser.BooleanLiteralNode;
import org.gravel.support.parser.BooleanOrNode;
import org.gravel.support.parser.BottomTypeNode;
import org.gravel.support.parser.BoundVariableDeclarationNode;
import org.gravel.support.parser.ByteArrayLiteralNode;
import org.gravel.support.parser.CascadeNode;
import org.gravel.support.parser.MessageNode;
import org.gravel.support.parser.CharacterLiteralNode;
import org.gravel.support.parser.ClassDescriptionNode;
import org.gravel.support.parser.ClassNode;
import org.gravel.support.parser.TraitUsageNode;
import org.gravel.support.parser.ClassTypeNode;
import org.gravel.support.parser.CreateHolderNode;
import org.gravel.support.parser.FieldReadNode;
import org.gravel.support.parser.FieldWriteNode;
import org.gravel.support.parser.FixedPointLiteralNode;
import org.gravel.support.parser.FloatLiteralNode;
import org.gravel.support.parser.GenericTypeVariableNode;
import org.gravel.support.parser.GlobalReadNode;
import org.gravel.support.parser.GlobalWriteNode;
import org.gravel.support.parser.HolderDeclarationNode;
import org.gravel.support.parser.IdentityComparisonNode;
import org.gravel.support.parser.IfTrueIfFalseNode;
import org.gravel.support.parser.InlineExpressionCollection;
import org.gravel.support.parser.InstanceCreationNode;
import org.gravel.support.parser.InstanceTypeNode;
import org.gravel.support.parser.IntegerLiteralNode;
import org.gravel.support.parser.IntermediateNode;
import org.gravel.support.parser.IntermediateStatement;
import org.gravel.support.parser.IsNilNode;
import org.gravel.support.parser.KeywordMessageNode;
import org.gravel.support.parser.KeywordMethodNode;
import org.gravel.support.parser.LocalReadNode;
import org.gravel.support.parser.LocalWriteNode;
import org.gravel.support.parser.NamespacedTypeVariableNode;
import org.gravel.support.parser.NamespacedVariableNode;
import org.gravel.support.parser.NamespaceNode;
import org.gravel.support.parser.SharedDeclarationNode;
import org.gravel.support.parser.NilLiteralNode;
import org.gravel.support.parser.NonLocalReturnNode;
import org.gravel.support.parser.PackageNode;
import org.gravel.support.parser.ReadHolderNode;
import org.gravel.support.parser.ReferenceLiteralNode;
import org.gravel.support.parser.ReturnNode;
import org.gravel.support.parser.SelfNode;
import org.gravel.support.parser.SelfTypeNode;
import org.gravel.support.parser.StateAccessNode;
import org.gravel.support.parser.StringLiteralNode;
import org.gravel.support.parser.SuperNode;
import org.gravel.support.parser.SymbolLiteralNode;
import org.gravel.support.parser.ToDoNode;
import org.gravel.support.parser.TypeCast;
import org.gravel.support.parser.TypeDefNode;
import org.gravel.support.parser.TypeOrNode;
import org.gravel.support.parser.TypeVariableNode;
import org.gravel.support.parser.UnaryMessageNode;
import org.gravel.support.parser.UnaryMethodNode;
import org.gravel.support.parser.WhileFalseNode;
import org.gravel.support.parser.WhileNode;
import org.gravel.support.parser.WhileTrueNode;
import org.gravel.support.parser.WriteHolderNode;

public class NodeCopier extends NodeVisitor<Node> implements Cloneable {

	public static NodeCopier_Factory factory = new NodeCopier_Factory();

	public static class NodeCopier_Factory extends NodeVisitor_Factory<Node> {

		public NodeCopier basicNew() {
			NodeCopier newInstance = new NodeCopier();
			newInstance.initialize();
			return newInstance;
		}
	}

	public NodeCopier copy() {
		try {
			NodeCopier _temp1 = (NodeCopier) this.clone();
			_temp1.postCopy();
			return _temp1;
		} catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

	public NodeCopier_Factory factory() {
		return factory;
	}

	public String produceNlrMarkerDefinition_for_(final String _aString, final MethodNode _aMethodNode) {
		return _aString;
	}

	@Override
	public ArrayAccessNode visitArrayAccessNode_(final ArrayAccessNode _anObject) {
		return ArrayAccessNode.factory.receiver_(((Expression) this.visit_(_anObject.receiver())));
	}

	@Override
	public ArrayAtNode visitArrayAtNode_(final ArrayAtNode _anObject) {
		return ArrayAtNode.factory.receiver_index_(((Expression) this.visit_(_anObject.receiver())), ((Expression) this.visit_(_anObject.index())));
	}

	@Override
	public ArrayAtPutNode visitArrayAtPutNode_(final ArrayAtPutNode _anObject) {
		return ArrayAtPutNode.factory.receiver_index_value_(((Expression) this.visit_(_anObject.receiver())), ((Expression) this.visit_(_anObject.index())), ((Expression) this.visit_(_anObject.value())));
	}

	@Override
	public ArrayLiteralNode visitArrayLiteralNode_(final ArrayLiteralNode _anObject) {
		return ArrayLiteralNode.factory.elements_(org.gravel.support.jvm.ArrayExtensions.collect_(_anObject.elements(), ((org.gravel.support.jvm.Block1<LiteralNode, LiteralNode>) (new org.gravel.support.jvm.Block1<LiteralNode, LiteralNode>() {

			@Override
			public LiteralNode value_(final LiteralNode _each) {
				return (LiteralNode) NodeCopier.this.visit_(_each);
			}
		}))));
	}

	@Override
	public ArraySizeNode visitArraySizeNode_(final ArraySizeNode _anObject) {
		return ArraySizeNode.factory.receiver_(((Expression) this.visit_(_anObject.receiver())));
	}

	@Override
	public Expression visitAssignmentNode_(final AssignmentNode _anObject) {
		return AssignmentNode.factory.variable_value_(((VariableNode) this.visit_(_anObject.variable())), ((Expression) this.visit_(_anObject.value())));
	}

	@Override
	public Statement visitBinaryMessageNode_(final BinaryMessageNode _anObject) {
		return BinaryMessageNode.factory.receiver_selector_argument_(((Expression) this.visit_(_anObject.receiver())), _anObject.selector(), ((Expression) this.visit_(_anObject.argument())));
	}

	@Override
	public MethodNode visitBinaryMethodNode_(final BinaryMethodNode _anObject) {
		final String _nlrMarker;
		_nlrMarker = this.produceNlrMarkerDefinition_for_(_anObject.nlrMarker(), _anObject);
		return BinaryMethodNode.factory.selector_argument_body_returnType_pragmas_protocol_nlrMarker_(_anObject.selector(), ((VariableDeclarationNode) this.visit_(_anObject.argument())), ((SequenceNode) this.visit_(_anObject.body())), ((TypeNode) this.visit_(_anObject.returnType())), org.gravel.support.jvm.ArrayExtensions.collect_(_anObject.pragmas(), ((org.gravel.support.jvm.Block1<PragmaNode, PragmaNode>) (new org.gravel.support.jvm.Block1<PragmaNode, PragmaNode>() {

			@Override
			public PragmaNode value_(final PragmaNode _each) {
				return (PragmaNode) NodeCopier.this.visit_(_each);
			}
		}))), _anObject.protocol(), _nlrMarker);
	}

	@Override
	public BlockNode visitBlockNode_(final BlockNode _anObject) {
		return BlockNode.factory.arguments_body_returnType_(org.gravel.support.jvm.ArrayExtensions.collect_(_anObject.arguments(), ((org.gravel.support.jvm.Block1<VariableDeclarationNode, VariableDeclarationNode>) (new org.gravel.support.jvm.Block1<VariableDeclarationNode, VariableDeclarationNode>() {

			@Override
			public VariableDeclarationNode value_(final VariableDeclarationNode _each) {
				return (VariableDeclarationNode) NodeCopier.this.visit_(_each);
			}
		}))), ((SequenceNode) this.visit_(_anObject.body())), ((TypeNode) this.visit_(_anObject.returnType())));
	}

	@Override
	public BlockTypeNode visitBlockTypeNode_(final BlockTypeNode _anObject) {
		return BlockTypeNode.factory.arguments_returnType_(org.gravel.support.jvm.ArrayExtensions.collect_(_anObject.arguments(), ((org.gravel.support.jvm.Block1<TypeNode, TypeNode>) (new org.gravel.support.jvm.Block1<TypeNode, TypeNode>() {

			@Override
			public TypeNode value_(final TypeNode _each) {
				return (TypeNode) NodeCopier.this.visit_(_each);
			}
		}))), ((TypeNode) this.visit_(_anObject.returnType())));
	}

	@Override
	public BooleanAndNode visitBooleanAndNode_(final BooleanAndNode _anObject) {
		return BooleanAndNode.factory.left_right_(((Expression) this.visit_(_anObject.left())), ((SequenceNode) this.visit_(_anObject.right())));
	}

	@Override
	public BooleanLiteralNode visitBooleanLiteralNode_(final BooleanLiteralNode _anObject) {
		return BooleanLiteralNode.factory.value_(_anObject.value());
	}

	@Override
	public BooleanOrNode visitBooleanOrNode_(final BooleanOrNode _anObject) {
		return BooleanOrNode.factory.left_right_(((Expression) this.visit_(_anObject.left())), ((SequenceNode) this.visit_(_anObject.right())));
	}

	@Override
	public BottomTypeNode visitBottomTypeNode_(final BottomTypeNode _anObject) {
		return BottomTypeNode.factory.basicNew();
	}

	@Override
	public BoundVariableDeclarationNode visitBoundVariableDeclarationNode_(final BoundVariableDeclarationNode _anObject) {
		return BoundVariableDeclarationNode.factory.name_type_ownerType_(_anObject.name(), ((TypeNode) this.visit_(_anObject.type())), _anObject.ownerType());
	}

	@Override
	public ByteArrayLiteralNode visitByteArrayLiteralNode_(final ByteArrayLiteralNode _anObject) {
		return ByteArrayLiteralNode.factory.value_(_anObject.value());
	}

	@Override
	public Expression visitCascadeNode_(final CascadeNode _anObject) {
		return CascadeNode.factory.messages_(org.gravel.support.jvm.ArrayExtensions.collect_(_anObject.messages(), ((org.gravel.support.jvm.Block1<MessageNode, MessageNode>) (new org.gravel.support.jvm.Block1<MessageNode, MessageNode>() {

			@Override
			public MessageNode value_(final MessageNode _each) {
				return (MessageNode) NodeCopier.this.visit_(_each);
			}
		}))));
	}

	@Override
	public CharacterLiteralNode visitCharacterLiteralNode_(final CharacterLiteralNode _anObject) {
		return CharacterLiteralNode.factory.value_(_anObject.value());
	}

	@Override
	public ClassDescriptionNode visitClassDescriptionNode_(final ClassDescriptionNode _anObject) {
		return ClassDescriptionNode.factory.methods_instVars_(org.gravel.support.jvm.ArrayExtensions.collect_(_anObject.methods(), ((org.gravel.support.jvm.Block1<MethodNode, MethodNode>) (new org.gravel.support.jvm.Block1<MethodNode, MethodNode>() {

			@Override
			public MethodNode value_(final MethodNode _each) {
				return (MethodNode) NodeCopier.this.visit_(_each);
			}
		}))), org.gravel.support.jvm.ArrayExtensions.collect_(_anObject.instVars(), ((org.gravel.support.jvm.Block1<VariableDeclarationNode, VariableDeclarationNode>) (new org.gravel.support.jvm.Block1<VariableDeclarationNode, VariableDeclarationNode>() {

			@Override
			public VariableDeclarationNode value_(final VariableDeclarationNode _each) {
				return (VariableDeclarationNode) NodeCopier.this.visit_(_each);
			}
		}))));
	}

	@Override
	public ClassNode visitClassNode_(final ClassNode _anObject) {
		return ClassNode.factory.name_superclassPath_properties_instVars_classInstVars_sharedVariables_methods_classMethods_namespace_isExtension_isTrait_traitUsage_classTraitUsage_(_anObject.name(), _anObject.superclassPath(), _anObject.properties(), org.gravel.support.jvm.ArrayExtensions.collect_(_anObject.instVars(), ((org.gravel.support.jvm.Block1<VariableDeclarationNode, VariableDeclarationNode>) (new org.gravel.support.jvm.Block1<VariableDeclarationNode, VariableDeclarationNode>() {

			@Override
			public VariableDeclarationNode value_(final VariableDeclarationNode _each) {
				return (VariableDeclarationNode) NodeCopier.this.visit_(_each);
			}
		}))), _anObject.metaclassNode().instVars(), _anObject.metaclassNode().sharedVariables(), org.gravel.support.jvm.ArrayExtensions.collect_(_anObject.methods(), ((org.gravel.support.jvm.Block1<MethodNode, MethodNode>) (new org.gravel.support.jvm.Block1<MethodNode, MethodNode>() {

			@Override
			public MethodNode value_(final MethodNode _each) {
				return (MethodNode) NodeCopier.this.visit_(_each);
			}
		}))), org.gravel.support.jvm.ArrayExtensions.collect_(_anObject.classMethods(), ((org.gravel.support.jvm.Block1<MethodNode, MethodNode>) (new org.gravel.support.jvm.Block1<MethodNode, MethodNode>() {

			@Override
			public MethodNode value_(final MethodNode _each) {
				return (MethodNode) NodeCopier.this.visit_(_each);
			}
		}))), _anObject.namespace(), _anObject.isExtension(), _anObject.isTrait(), ((TraitUsageNode) this.visit_(_anObject.traitUsage())), ((TraitUsageNode) this.visit_(_anObject.classTraitUsage())));
	}

	@Override
	public ClassTypeNode visitClassTypeNode_(final ClassTypeNode _anObject) {
		return ClassTypeNode.factory.node_(((TypeNode) this.visit_(_anObject.node())));
	}

	@Override
	public CreateHolderNode visitCreateHolderNode_(final CreateHolderNode _anObject) {
		return CreateHolderNode.factory.basicNew();
	}

	@Override
	public Expression visitExpression_(final Expression _anObject) {
		return Expression.factory.basicNew();
	}

	@Override
	public Expression visitFieldReadNode_(final FieldReadNode _anObject) {
		return FieldReadNode.factory.owner_field_(((Expression) this.visit_(_anObject.owner())), _anObject.field());
	}

	@Override
	public FieldWriteNode visitFieldWriteNode_(final FieldWriteNode _anObject) {
		return FieldWriteNode.factory.owner_field_value_(((Expression) this.visit_(_anObject.owner())), _anObject.field(), ((Expression) this.visit_(_anObject.value())));
	}

	@Override
	public FixedPointLiteralNode visitFixedPointLiteralNode_(final FixedPointLiteralNode _anObject) {
		return FixedPointLiteralNode.factory.fixedPoint_(_anObject.fixedPoint());
	}

	@Override
	public FloatLiteralNode visitFloatLiteralNode_(final FloatLiteralNode _anObject) {
		return FloatLiteralNode.factory.valueString_(_anObject.valueString());
	}

	@Override
	public GenericTypeVariableNode visitGenericTypeVariableNode_(final GenericTypeVariableNode _anObject) {
		return GenericTypeVariableNode.factory.root_arguments_(((TypeNode) this.visit_(_anObject.root())), org.gravel.support.jvm.ArrayExtensions.collect_(_anObject.arguments(), ((org.gravel.support.jvm.Block1<TypeNode, TypeNode>) (new org.gravel.support.jvm.Block1<TypeNode, TypeNode>() {

			@Override
			public TypeNode value_(final TypeNode _each) {
				return (TypeNode) NodeCopier.this.visit_(_each);
			}
		}))));
	}

	@Override
	public Expression visitGlobalReadNode_(final GlobalReadNode _anObject) {
		return GlobalReadNode.factory.namespace_name_(_anObject.namespace(), _anObject.name());
	}

	@Override
	public GlobalWriteNode visitGlobalWriteNode_(final GlobalWriteNode _anObject) {
		return GlobalWriteNode.factory.namespace_name_value_(_anObject.namespace(), _anObject.name(), ((Expression) this.visit_(_anObject.value())));
	}

	@Override
	public HolderDeclarationNode visitHolderDeclarationNode_(final HolderDeclarationNode _anObject) {
		return HolderDeclarationNode.factory.name_type_(_anObject.name(), ((TypeNode) this.visit_(_anObject.type())));
	}

	@Override
	public IdentityComparisonNode visitIdentityComparisonNode_(final IdentityComparisonNode _anObject) {
		return IdentityComparisonNode.factory.left_right_(((Expression) this.visit_(_anObject.left())), ((Expression) this.visit_(_anObject.right())));
	}

	@Override
	public IfTrueIfFalseNode visitIfTrueIfFalseNode_(final IfTrueIfFalseNode _anObject) {
		return IfTrueIfFalseNode.factory.test_trueSequence_falseSequence_returnType_(((Expression) this.visit_(_anObject.test())), ((SequenceNode) this.visit_(_anObject.trueSequence())), ((SequenceNode) this.visit_(_anObject.falseSequence())), ((TypeNode) this.visit_(_anObject.returnType())));
	}

	@Override
	public InlineExpressionCollection visitInlineExpressionCollection_(final InlineExpressionCollection _anObject) {
		return InlineExpressionCollection.factory.expressions_(org.gravel.support.jvm.ArrayExtensions.collect_(_anObject.expressions(), ((org.gravel.support.jvm.Block1<Expression, Expression>) (new org.gravel.support.jvm.Block1<Expression, Expression>() {

			@Override
			public Expression value_(final Expression _each) {
				return (Expression) NodeCopier.this.visit_(_each);
			}
		}))));
	}

	@Override
	public InstanceCreationNode visitInstanceCreationNode_(final InstanceCreationNode _anObject) {
		return InstanceCreationNode.factory.reference_(_anObject.reference());
	}

	@Override
	public InstanceTypeNode visitInstanceTypeNode_(final InstanceTypeNode _anObject) {
		return InstanceTypeNode.factory.basicNew();
	}

	@Override
	public IntegerLiteralNode visitIntegerLiteralNode_(final IntegerLiteralNode _anObject) {
		return IntegerLiteralNode.factory.integer_(_anObject.integer());
	}

	@Override
	public IntermediateNode visitIntermediateNode_(final IntermediateNode _anObject) {
		return IntermediateNode.factory.basicNew();
	}

	@Override
	public IntermediateStatement visitIntermediateStatement_(final IntermediateStatement _anObject) {
		return IntermediateStatement.factory.basicNew();
	}

	@Override
	public IsNilNode visitIsNilNode_(final IsNilNode _anObject) {
		return IsNilNode.factory.receiver_(((Expression) this.visit_(_anObject.receiver())));
	}

	@Override
	public Statement visitKeywordMessageNode_(final KeywordMessageNode _anObject) {
		return KeywordMessageNode.factory.receiver_selector_arguments_(((Expression) this.visit_(_anObject.receiver())), _anObject.selector(), org.gravel.support.jvm.ArrayExtensions.collect_(_anObject.arguments(), ((org.gravel.support.jvm.Block1<Expression, Expression>) (new org.gravel.support.jvm.Block1<Expression, Expression>() {

			@Override
			public Expression value_(final Expression _each) {
				return (Expression) NodeCopier.this.visit_(_each);
			}
		}))));
	}

	@Override
	public MethodNode visitKeywordMethodNode_(final KeywordMethodNode _anObject) {
		final String _nlrMarker;
		_nlrMarker = this.produceNlrMarkerDefinition_for_(_anObject.nlrMarker(), _anObject);
		return KeywordMethodNode.factory.selector_arguments_body_returnType_pragmas_protocol_nlrMarker_(_anObject.selector(), org.gravel.support.jvm.ArrayExtensions.collect_(_anObject.arguments(), ((org.gravel.support.jvm.Block1<VariableDeclarationNode, VariableDeclarationNode>) (new org.gravel.support.jvm.Block1<VariableDeclarationNode, VariableDeclarationNode>() {

			@Override
			public VariableDeclarationNode value_(final VariableDeclarationNode _each) {
				return (VariableDeclarationNode) NodeCopier.this.visit_(_each);
			}
		}))), ((SequenceNode) this.visit_(_anObject.body())), ((TypeNode) this.visit_(_anObject.returnType())), org.gravel.support.jvm.ArrayExtensions.collect_(_anObject.pragmas(), ((org.gravel.support.jvm.Block1<PragmaNode, PragmaNode>) (new org.gravel.support.jvm.Block1<PragmaNode, PragmaNode>() {

			@Override
			public PragmaNode value_(final PragmaNode _each) {
				return (PragmaNode) NodeCopier.this.visit_(_each);
			}
		}))), _anObject.protocol(), _nlrMarker);
	}

	@Override
	public LiteralNode visitLiteralNode_(final LiteralNode _anObject) {
		return LiteralNode.factory.basicNew();
	}

	@Override
	public Expression visitLocalReadNode_(final LocalReadNode _anObject) {
		return LocalReadNode.factory.name_(_anObject.name());
	}

	@Override
	public LocalWriteNode visitLocalWriteNode_(final LocalWriteNode _anObject) {
		return LocalWriteNode.factory.name_value_(_anObject.name(), ((Expression) this.visit_(_anObject.value())));
	}

	@Override
	public Expression visitMessageNode_(final MessageNode _anObject) {
		return MessageNode.factory.receiver_selector_(((Expression) this.visit_(_anObject.receiver())), _anObject.selector());
	}

	@Override
	public MethodNode visitMethodNode_(final MethodNode _anObject) {
		final String _nlrMarker;
		_nlrMarker = this.produceNlrMarkerDefinition_for_(_anObject.nlrMarker(), _anObject);
		return MethodNode.factory.selector_body_returnType_pragmas_protocol_nlrMarker_(_anObject.selector(), ((SequenceNode) this.visit_(_anObject.body())), ((TypeNode) this.visit_(_anObject.returnType())), org.gravel.support.jvm.ArrayExtensions.collect_(_anObject.pragmas(), ((org.gravel.support.jvm.Block1<PragmaNode, Node>) (new org.gravel.support.jvm.Block1<PragmaNode, Node>() {

			@Override
			public PragmaNode value_(final Node _each) {
				return (PragmaNode) NodeCopier.this.visit_(_each);
			}
		}))), _anObject.protocol(), _nlrMarker);
	}

	@Override
	public NamespacedTypeVariableNode visitNamespacedTypeVariableNode_(final NamespacedTypeVariableNode _anObject) {
		return NamespacedTypeVariableNode.factory.path_(_anObject.path());
	}

	@Override
	public NamespacedVariableNode visitNamespacedVariableNode_(final NamespacedVariableNode _anObject) {
		return NamespacedVariableNode.factory.path_(_anObject.path());
	}

	@Override
	public NamespaceNode visitNamespaceNode_(final NamespaceNode _aNamespaceNode) {
		return NamespaceNode.factory.reference_publicImports_privateImports_sharedVariables_(_aNamespaceNode.reference(), _aNamespaceNode.publicImports(), _aNamespaceNode.privateImports(), org.gravel.support.jvm.ArrayExtensions.collect_(_aNamespaceNode.sharedVariables(), ((org.gravel.support.jvm.Block1<SharedDeclarationNode, SharedDeclarationNode>) (new org.gravel.support.jvm.Block1<SharedDeclarationNode, SharedDeclarationNode>() {

			@Override
			public SharedDeclarationNode value_(final SharedDeclarationNode _each) {
				return (SharedDeclarationNode) NodeCopier.this.visit_(_each);
			}
		}))));
	}

	@Override
	public NilLiteralNode visitNilLiteralNode_(final NilLiteralNode _anObject) {
		return NilLiteralNode.factory.basicNew();
	}

	@Override
	public Node visitNode_(final Node _anObject) {
		return Node.factory.basicNew();
	}

	@Override
	public Statement visitNonLocalReturnNode_(final NonLocalReturnNode _anObject) {
		return NonLocalReturnNode.factory.marker_value_(_anObject.marker(), ((Expression) this.visit_(_anObject.value())));
	}

	@Override
	public PackageNode visitPackageNode_(final PackageNode _anObject) {
		return PackageNode.factory.name_classes_namespaces_(_anObject.name(), org.gravel.support.jvm.ArrayExtensions.collect_(_anObject.classes(), ((org.gravel.support.jvm.Block1<ClassNode, ClassNode>) (new org.gravel.support.jvm.Block1<ClassNode, ClassNode>() {

			@Override
			public ClassNode value_(final ClassNode _each) {
				return (ClassNode) NodeCopier.this.visit_(_each);
			}
		}))), org.gravel.support.jvm.ArrayExtensions.collect_(_anObject.namespaces(), ((org.gravel.support.jvm.Block1<NamespaceNode, NamespaceNode>) (new org.gravel.support.jvm.Block1<NamespaceNode, NamespaceNode>() {

			@Override
			public NamespaceNode value_(final NamespaceNode _each) {
				return (NamespaceNode) NodeCopier.this.visit_(_each);
			}
		}))));
	}

	@Override
	public PragmaNode visitPragmaNode_(final PragmaNode _anObject) {
		return PragmaNode.factory.expression_(((MessageNode) this.visit_(_anObject.expression())));
	}

	@Override
	public ReadHolderNode visitReadHolderNode_(final ReadHolderNode _anObject) {
		return ReadHolderNode.factory.varName_(_anObject.varName());
	}

	@Override
	public ReferenceLiteralNode visitReferenceLiteralNode_(final ReferenceLiteralNode _anObject) {
		return ReferenceLiteralNode.factory.path_(_anObject.path());
	}

	@Override
	public Statement visitReturnNode_(final ReturnNode _anObject) {
		return ReturnNode.factory.value_(((Expression) this.visit_(_anObject.value())));
	}

	@Override
	public Expression visitSelfNode_(final SelfNode _anObject) {
		return _anObject;
	}

	@Override
	public SelfTypeNode visitSelfTypeNode_(final SelfTypeNode _anObject) {
		return SelfTypeNode.factory.basicNew();
	}

	@Override
	public SequenceNode visitSequenceNode_(final SequenceNode _anObject) {
		return SequenceNode.factory.temporaries_statements_(org.gravel.support.jvm.ArrayExtensions.collect_(_anObject.temporaries(), ((org.gravel.support.jvm.Block1<VariableDeclarationNode, VariableDeclarationNode>) (new org.gravel.support.jvm.Block1<VariableDeclarationNode, VariableDeclarationNode>() {

			@Override
			public VariableDeclarationNode value_(final VariableDeclarationNode _each) {
				return (VariableDeclarationNode) NodeCopier.this.visit_(_each);
			}
		}))), org.gravel.support.jvm.ArrayExtensions.collect_(_anObject.statements(), ((org.gravel.support.jvm.Block1<Statement, Statement>) (new org.gravel.support.jvm.Block1<Statement, Statement>() {

			@Override
			public Statement value_(final Statement _each) {
				return (Statement) NodeCopier.this.visit_(_each);
			}
		}))));
	}

	@Override
	public SharedDeclarationNode visitSharedDeclarationNode_(final SharedDeclarationNode _anObject) {
		return SharedDeclarationNode.factory.name_initializer_(_anObject.name(), ((Expression) this.visit_(_anObject.initializer())));
	}

	@Override
	public StateAccessNode visitStateAccessNode_(final StateAccessNode _anObject) {
		return StateAccessNode.factory.basicNew();
	}

	@Override
	public Statement visitStatement_(final Statement _anObject) {
		return Statement.factory.basicNew();
	}

	@Override
	public StringLiteralNode visitStringLiteralNode_(final StringLiteralNode _anObject) {
		return StringLiteralNode.factory.value_(_anObject.value());
	}

	@Override
	public SuperNode visitSuperNode_(final SuperNode _anObject) {
		return SuperNode.factory.reference_(_anObject.reference());
	}

	@Override
	public SymbolLiteralNode visitSymbolLiteralNode_(final SymbolLiteralNode _anObject) {
		return SymbolLiteralNode.factory.value_(_anObject.value());
	}

	@Override
	public ToDoNode visitToDoNode_(final ToDoNode _anObject) {
		return ToDoNode.factory.start_stop_step_counterName_doSequence_(((Expression) this.visit_(_anObject.start())), ((Expression) this.visit_(_anObject.stop())), ((Expression) this.visit_(_anObject.step())), _anObject.counterName(), ((SequenceNode) this.visit_(_anObject.doSequence())));
	}

	@Override
	public TypeCast visitTypeCast_(final TypeCast _aTypeCast) {
		return TypeCast.factory.type_expression_(((TypeNode) this.visit_(_aTypeCast.type())), ((Expression) this.visit_(_aTypeCast.expression())));
	}

	@Override
	public TypeDefNode visitTypeDefNode_(final TypeDefNode _anObject) {
		return TypeDefNode.factory.node_(((TypeNode) this.visit_(_anObject.node())));
	}

	@Override
	public TypeNode visitTypeNode_(final TypeNode _anObject) {
		return TypeNode.factory.basicNew();
	}

	@Override
	public TypeNode visitTypeOrNode_(final TypeOrNode _anObject) {
		return TypeOrNode.factory.left_right_(((TypeNode) this.visit_(_anObject.left())), ((TypeNode) this.visit_(_anObject.right())));
	}

	@Override
	public TypeVariableNode visitTypeVariableNode_(final TypeVariableNode _anObject) {
		return TypeVariableNode.factory.name_(_anObject.name());
	}

	@Override
	public Statement visitUnaryMessageNode_(final UnaryMessageNode _anObject) {
		return UnaryMessageNode.factory.receiver_selector_(((Expression) this.visit_(_anObject.receiver())), _anObject.selector());
	}

	@Override
	public MethodNode visitUnaryMethodNode_(final UnaryMethodNode _anObject) {
		final String _nlrMarker;
		_nlrMarker = this.produceNlrMarkerDefinition_for_(_anObject.nlrMarker(), _anObject);
		return UnaryMethodNode.factory.selector_body_returnType_pragmas_protocol_nlrMarker_(_anObject.selector(), ((SequenceNode) this.visit_(_anObject.body())), ((TypeNode) this.visit_(_anObject.returnType())), org.gravel.support.jvm.ArrayExtensions.collect_(_anObject.pragmas(), ((org.gravel.support.jvm.Block1<PragmaNode, PragmaNode>) (new org.gravel.support.jvm.Block1<PragmaNode, PragmaNode>() {

			@Override
			public PragmaNode value_(final PragmaNode _each) {
				return (PragmaNode) NodeCopier.this.visit_(_each);
			}
		}))), _anObject.protocol(), _nlrMarker);
	}

	@Override
	public VariableDeclarationNode visitVariableDeclarationNode_(final VariableDeclarationNode _anObject) {
		return VariableDeclarationNode.factory.name_type_(_anObject.name(), ((TypeNode) this.visit_(_anObject.type())));
	}

	@Override
	public Expression visitVariableNode_(final VariableNode _anObject) {
		return VariableNode.factory.name_(_anObject.name());
	}

	@Override
	public WhileFalseNode visitWhileFalseNode_(final WhileFalseNode _anObject) {
		return WhileFalseNode.factory.testSequence_doSequence_(((SequenceNode) this.visit_(_anObject.testSequence())), ((SequenceNode) this.visit_(_anObject.doSequence())));
	}

	@Override
	public WhileNode visitWhileNode_(final WhileNode _anObject) {
		return WhileNode.factory.testSequence_doSequence_(((SequenceNode) this.visit_(_anObject.testSequence())), ((SequenceNode) this.visit_(_anObject.doSequence())));
	}

	@Override
	public WhileTrueNode visitWhileTrueNode_(final WhileTrueNode _anObject) {
		return WhileTrueNode.factory.testSequence_doSequence_(((SequenceNode) this.visit_(_anObject.testSequence())), ((SequenceNode) this.visit_(_anObject.doSequence())));
	}

	@Override
	public WriteHolderNode visitWriteHolderNode_(final WriteHolderNode _anObject) {
		return WriteHolderNode.factory.varName_value_(_anObject.varName(), ((Expression) this.visit_(_anObject.value())));
	}

	@Override
	public Node visit_(final Node _anObject) {
		final Node _newNode;
		if (_anObject == null) {
			return null;
		}
		_newNode = ((Node) _anObject.accept_(this));
		if (_newNode == null) {
			return null;
		}
		return _newNode.withSourcePosition_(_anObject.sourcePosition());
	}
}
