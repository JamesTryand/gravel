package org.gravel.support.compiler.jvm;

/*
	This file is automatically generated. See FX.TService.TService class>>generateWorkspaces
	(C) CosmoCows B.V.
*/

import java.math.BigDecimal;
import java.math.BigInteger;
import org.gravel.support.jvm.NonLocalReturn;
import org.gravel.support.compiler.jvm.PushConstant;
import org.gravel.support.compiler.jvm.PushConstant.PushConstant_Factory;
import org.gravel.support.compiler.jvm.JVMInstructionVisitor;
import org.gravel.support.compiler.jvm.JVMType;
import org.gravel.support.compiler.jvm.JVMBooleanType;

public class PushBoolean extends PushConstant implements Cloneable {

	public static PushBoolean_Factory factory = new PushBoolean_Factory();

	public static class PushBoolean_Factory extends PushConstant_Factory {

		public PushBoolean basicNew() {
			PushBoolean newInstance = new PushBoolean();
			newInstance.initialize();
			return newInstance;
		}
	}

	@Override
	public <X> X accept_(final JVMInstructionVisitor<X> _visitor) {
		return _visitor.visitPushBoolean_(this);
	}

	public PushBoolean copy() {
		try {
			PushBoolean _temp1 = (PushBoolean) this.clone();
			_temp1.postCopy();
			return _temp1;
		} catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

	public PushBoolean_Factory factory() {
		return factory;
	}

	@Override
	public PushBoolean printOn_(final StringBuilder _aStream) {
		final String _title;
		_title = this.factory().toString();
		_aStream.append(org.gravel.support.jvm.CharacterExtensions.isVowel(_title.charAt(0)) ? "an " : "a ");
		_aStream.append(_title);
		_aStream.append('[');
		this.sourceOn_(_aStream);
		_aStream.append(']');
		return this;
	}

	@Override
	public PushBoolean sourceOn_(final StringBuilder _aStream) {
		return this;
	}

	@Override
	public JVMType type() {
		return JVMBooleanType.factory.basicNew();
	}

	@Override
	public PushBoolean withReturnType_(final JVMType _aType) {
		if (org.gravel.support.jvm.ObjectExtensions.equals_(this.type(), _aType)) {
			return PushBoolean.this;
		}
		throw new RuntimeException("niy");
	}
}
