package org.gravel.support.compiler.ast;

/*
	This file is automatically generated from typed smalltalk source. Do not edit by hand.
	(C) AG5.com
*/

import java.math.BigDecimal;
import java.math.BigInteger;
import org.gravel.support.jvm.NonLocalReturn;
import org.gravel.support.compiler.ast.NodeVisitor;
import org.gravel.support.compiler.ast.Node;
import org.gravel.support.compiler.ast.NodeVisitor.NodeVisitor_Factory;
import org.gravel.support.compiler.ast.VariableNode;
import org.gravel.support.compiler.ast.EmptyTraitUsageNode;
import org.gravel.support.compiler.ast.SimpleTraitUsageNode;
import org.gravel.support.compiler.ast.StringLiteralNode;

public class TraitUsageToDirectiveConverter extends NodeVisitor<Node[]> implements Cloneable {

	public static TraitUsageToDirectiveConverter_Factory factory = new TraitUsageToDirectiveConverter_Factory();

	public static class TraitUsageToDirectiveConverter_Factory extends NodeVisitor_Factory<Node[]> {

		public TraitUsageToDirectiveConverter basicNew() {
			TraitUsageToDirectiveConverter newInstance = new TraitUsageToDirectiveConverter();
			newInstance.initialize();
			return newInstance;
		}
	}

	public TraitUsageToDirectiveConverter copy() {
		try {
			TraitUsageToDirectiveConverter _temp1 = (TraitUsageToDirectiveConverter) this.clone();
			_temp1.postCopy();
			return _temp1;
		} catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

	public TraitUsageToDirectiveConverter_Factory factory() {
		return factory;
	}

	public VariableNode reader() {
		return VariableNode.factory.name_("reader");
	}

	@Override
	public Node[] visitEmptyTraitUsageNode_(final EmptyTraitUsageNode _anEmptyTraitUsageNode) {
		return new Node[] {};
	}

	@Override
	public Node[] visitSimpleTraitUsageNode_(final SimpleTraitUsageNode _aSimpleTraitUsageNode) {
		if (_aSimpleTraitUsageNode.methodOperations().length == 0) {
			return org.gravel.support.jvm.ArrayFactory.with_(TraitUsageToDirectiveConverter.this.reader().send_with_("addSimpleTrait:", StringLiteralNode.factory.value_(_aSimpleTraitUsageNode.reference().toString())));
		}
		throw new RuntimeException("Not implemented yet");
	}
}
