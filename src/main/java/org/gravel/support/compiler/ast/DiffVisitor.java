package org.gravel.support.compiler.ast;

/*
	This file is automatically generated. See FX.TService.TService class>>generateWorkspaces
	(C) CosmoCows B.V.
*/

import java.math.BigDecimal;
import java.math.BigInteger;
import org.gravel.support.jvm.NonLocalReturn;
import org.gravel.support.compiler.ast.ClassDiff;
import org.gravel.support.compiler.ast.AddClassDiff;
import org.gravel.support.compiler.ast.NodeVisitorError;
import org.gravel.support.compiler.ast.NewClassDiff;
import org.gravel.support.compiler.ast.RemoveClassDiff;
import org.gravel.support.compiler.ast.UpdateClassDiff;
import org.gravel.support.compiler.ast.WrapJavaclassDiff;

public class DiffVisitor extends Object implements Cloneable {

	public static DiffVisitor_Factory factory = new DiffVisitor_Factory();

	public static class DiffVisitor_Factory extends org.gravel.support.jvm.SmalltalkFactory {

		public DiffVisitor basicNew() {
			DiffVisitor newInstance = new DiffVisitor();
			newInstance.initialize();
			return newInstance;
		}
	}

	public DiffVisitor copy() {
		try {
			DiffVisitor _temp1 = (DiffVisitor) this.clone();
			_temp1.postCopy();
			return _temp1;
		} catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

	public DiffVisitor_Factory factory() {
		return factory;
	}

	public DiffVisitor initialize() {
		return this;
	}

	public DiffVisitor postCopy() {
		return this;
	}

	public DiffVisitor visitAddClassDiff_(final AddClassDiff _anObject) {
		return this.visitNewClassDiff_(_anObject);
	}

	public DiffVisitor visitClassDiff_(final ClassDiff _anObject) {
		throw NodeVisitorError.factory.basicNew();
	}

	public DiffVisitor visitNewClassDiff_(final NewClassDiff _anObject) {
		return this.visitClassDiff_(_anObject);
	}

	public DiffVisitor visitRemoveClassDiff_(final RemoveClassDiff _anObject) {
		return this.visitClassDiff_(_anObject);
	}

	public DiffVisitor visitUpdateClassDiff_(final UpdateClassDiff _anObject) {
		return this.visitClassDiff_(_anObject);
	}

	public DiffVisitor visitWrapJavaclassDiff_(final WrapJavaclassDiff _anObject) {
		return this.visitNewClassDiff_(_anObject);
	}

	public DiffVisitor visit_(final ClassDiff _anObject) {
		_anObject.accept_(this);
		return this;
	}
}
